DROP FUNCTION IF EXISTS BestsellerLevel;

DELIMITER $$

CREATE FUNCTION BestsellerLevel (popular INT) RETURNS BOOLEAN DETERMINISTIC
BEGIN
    DECLARE result BOOLEAN DEFAULT FALSE;
    IF popular >=2 THEN
        SET result = TRUE;
    ELSE
        SET result = FALSE;
    END IF;
    return result;
END $$

DELIMITER ;

SELECT BestSellerLevel(2) AS BESTSELLER;

ALTER TABLE BOOKS ADD BESTSELLER BOOLEAN DEFAULT FALSE;

SELECT * FROM BOOKS;

DROP PROCEDURE IF EXISTS UpdateBestSellers;

DELIMITER $$

CREATE PROCEDURE UpdateBestSellers()
BEGIN
    DECLARE RENTCOUNT, BK_ID, DAYS INT;
    DECLARE BOOKSPERMONTH DECIMAL (5,2);
    DECLARE FINISHED INT DEFAULT 0;
    DECLARE ALL_BOOKS CURSOR FOR SELECT BOOK_ID FROM BOOKS;
    DECLARE CONTINUE HANDLER FOR NOT FOUND SET FINISHED = 1;
    OPEN ALL_BOOKS;
WHILE (FINISHED = 0) DO
    FETCH ALL_BOOKS INTO BK_ID;
    IF (FINISHED = 0) THEN
        SELECT COUNT(*) FROM RENTS
        WHERE BOOK_ID = BK_ID
        INTO RENTCOUNT;

    SELECT DATEDIFF(MAX(RENT_DATE), MIN(RENT_DATE)) + 1 FROM RENTS
    WHERE BOOK_ID = BK_ID
    INTO DAYS;

        SET  BOOKSPERMONTH = RENTCOUNT / DAYS * 110;


    UPDATE BOOKS SET BESTSELLER = BestsellerLevel(BOOKSPERMONTH)
        WHERE BOOK_ID = BK_ID;
        COMMIT;
    END IF;
END WHILE;
    CLOSE ALL_BOOKS;
END $$

DELIMITER ;

CALL UpdateBestSellers();

SELECT * FROM BOOKS